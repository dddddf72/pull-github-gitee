<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta name="history" content="no-history">
		<title>回放_退出</title>
		<link href="css/base.css" rel="stylesheet" type="text/css" />
		<script src="js/common.js"></script>
		<script type="text/javascript">
			var isStop = false;
			var tipType = -1;
			var listFocusId = "Image1";
			var isClose = false;
			var isReturnMain = false;// whether return home page
			var iCount = 20;
			//var mp = new MediaPlayer();
			var countTimer;
			var playIndex = parseInt(getGlobalVar("PLAY_JCHC", 10));
			var ListJson;
            var userId = getUserId();
            
			function initPage() {
				var nativePlayerInstanceId = getGlobalVar("nativePlayerInstanceId");
				tipType = getIntValue(getQueryStr("tipType", LocString));
				initDialog(tipType);
			}

			function pmcallBack() {
			    if(window.JSON.parse){
			        ListJson = JSON.parse(xmlHttp.responseText);
			    }else{
			        ListJson = eval("(" + xmlHttp.responseText + ")");
			    }
			}

			function initDialog(type) {
				iCount = 20;
				clearInterval(countTimer);
				var vod_play_type = getIntValue(getGlobalVar("vod_play_type"));
				var tip = "";
				switch(type) {
					case 0://退出键 && Stop键：取消所有书签
					case 2://返回键：有书签
					case 3://暂停超时后直接退出
						if(vod_play_type == 1) {
							tip = "是否停止播放当前节目？";
						} else {
							tip = "是否停止播放当前节目？";
						}
						if(type == 2 && vod_play_type == 0 && LocString.indexOf("&endPlayTime=") >= 0) {
							tip += "";
						}
						if(type == 2 && vod_play_type == 2) {
							tip = "&nbsp;&nbsp;确定退出当前时段节目?";
						}
						break;
					case 1:
						tip = "是否退出并返回主页？"
						break;
					case 10000:
						tip = "请插入卡，<span id=\"spCount\" style=\"color:#ffffff;\">" + iCount + "</span> 秒后自动退出。";
						$("Image2").src = "images/c_quit.png";
						break;
					case 200000:
						tip = "节目已快退至开始。<br/>按【确认】返回<br/>按【取消】重播";
						$("checkoutContent").style.top = "320px";
						break;
					case 100000:
						tip = "是否播放下一个影片?";
						findNextMovie();
						break;
					case 1313:
						tip = "是否继续上次观看";
						break;
					default:
						break;
				}
				countTimer = setInterval("QuitPage()", 1000);
				if(tip != "") {
					$("checkoutContent").innerHTML = tip;
				}
			}

			function closeVideo() {
				if(isStop) {
					$("checkoutContent").visibility = "hidden";
					if(isIPanel) media.AV.close();
					else (new MediaPlayer()).stop();
				}
			}

			function QuitPage() {
				setGlobalVar("chapter","");
				iCount--;
				var obj = $("spCount");
				if(obj != null)
					obj.innerText = iCount;
				if(iCount <= 0) {
					clearInterval(countTimer);
					if(tipType == 3 || tipType == 200000) {
						doConfirm(2);
					} else if(tipType == 100000) {
						doConfirm(tipType);
					} else {
                        enterCanel();
                    }
				}
			}
			
			var chapter=getGlobalVar("chapter");
			var columnMapId = getGlobalVar("columnMapId");
			
			function findNextMovie() {
                var VOD_FindNextSub = {  //获取点播Token
                    "data":"<GetNextSubAsset titleProviderId=\""+ getGlobalVar('providerId') +"\" titleAssetId=\"" + getGlobalVar("assetId") + "\" folderAssetId=\""+ getGlobalVar("columnMapId")+"\" portalId=\"" + portalId +"\" client=\"" + getSmartCardId()+"\" account=\"" + getUserId() +"\"/>",
                    "callBack" : function (data) {
                        if(window.JSON.parse){
                            ListJson = JSON.parse(data);
                        }else{
                            ListJson = eval("(" + data + ")");
                        }
                    }
                };
                IEPG.getData("/GetNextSubAsset", VOD_FindNextSub);
			}
			
			function doConfirm(type) {

				if(getGlobalVar("vod_ctrl_isFastRewindBack") == "Y")
					setGlobalVar("vod_ctrl_isFastRewindBack", "");
				isStop = true;
				var returnUrl = "";
				if(type == 1){
					returnUrl = getGlobalVar("PORTAL_ADDR");
					setGlobalVar("urlPathGlobalName", "");
					setGlobalVar("isBack", "");
				}else if(type == 100000) {//轮播开始
					returnUrl = getGlobalVar("vod_ctrl_backurl");
					if(ListJson) {
						var resourceId = ListJson.resourceId;
						//保存下一集的资源id,章节数，影片名称
						setGlobalVar("columnMapId", columnMapId);
						setGlobalVar("resourceId", resourceId);
						setGlobalVar("chapter", ListJson.chapters);
						setGlobalVar("displayName",ListJson.assetName);
                        var VOD_getToken = {  //获取点播Token
                            "data":"<SelectionStart titleProviderId=\""+ getGlobalVar('providerId') +"\" titleAssetId=\"" + getGlobalVar("assetId") + "\" folderAssetId=\""+ getGlobalVar("columnMapId")+"\" serviceId=\"\" portalId=\"" + portalId +"\" client=\"" + getSmartCardId()+"\" account=\"" + getUserId() +"\"/>",
                            "callBack" : function (data) {
                                var resText = eval("(" + xmlHttp.responseText + ")");
                                setGlobalVar("tryFlag", 0);
                                setGlobalVar("vod_play_type", 0);//播放类型  0 正常, 1 续播
                                setGlobalVar("vod_ctrl_rtsp", encodeURIComponent(resText.rtsp));
                                var backUrl = returnUrl;
                                var index = backUrl.indexOf('&vod_ctrl_breakpoint');
                                if(index > 0) {
                                    backUrl = backUrl.substring(0, index);
                                }
                                setGlobalVar("vod_ctrl_backurl", backUrl);
                                location.href = "vodplay.htm";
                            }
                        };
                        IEPG.getData("/SelectionStart", VOD_getToken);
					}
					return;
				}else if(type == 1313) {
                    doCancel(-1);
					return;
				} else {
					returnUrl = getGlobalVar("vod_ctrl_backurl");
				}
				if(returnUrl == "") {
					setGlobalVar("PLAY_JCHC", "");
					if(isClose)
						window.close();
					setContent("返回地址有误。[type=" + type + "]");
					isClose = true;
				} else {
					setGlobalVar("PLAY_JCHC", "");
					setGlobalVar("is_play_back", "Y");
					setGlobalVar("isBack", "Y");
					if(getGlobalVar("tryFlag") != "1" && getGlobalVar("vod_recordType") != "news" && LocString.indexOf("&endPlayTime=") >= 0){//非试看，保存书签操作
                        var endPlayTime = getQueryStr("endPlayTime", LocString);

					    saveBookMark(endPlayTime);
					}
					if(tipType == 1) {
						setGlobalVar("PLAY_JCHC", "");
						iPanel.mainFrame.location.href = "ui://index.htm";
						//location.href = returnUrl;
					} else {//书签操作
						setGlobalVar("PLAY_JCHC", "");
						var timer = setTimeout(function(){
							timer = -1;
							location.href = returnUrl;

						},500);
						// + "&endPlayTime=" + mp.currentPoint;
					}
				}
			}

			// function saveBookMark(timePosition){//保存书签操作 2012.2.17陈超添加
			// 	var url = "/bookmark/bookmarkAction!saveBookmark.action?userId=" + userId + "&columnMapId=" + getGlobalVar("columnMapId") + "&resourceId=" + getGlobalVar("resourceId")+"&timePosition="+timePosition;
			// 	ajaxUrl(url, "");
			// }


            var portalId = 102;
            function saveBookMark(timePosition){
                var URL_addSavedProgram = "/AddSavedProgram";
                var VOD_addSavedProgram = {//媒资详情
                    "data":"<AddSavedProgram  assetId=\"" + getGlobalVar("assetId") + "\" resumePointDisplay=\"" + timePosition + "\" folderAssetId=\"" + getGlobalVar("columnMapId") + "\" purchaseToken=\"" + getGlobalVar("purchaseToken") + "\" portalId=\"" + portalId +"\" client=\"" + getSmartCardId() +"\" account=\"" + userId +"\"/>",
                    "callBack" : function(resp){

					}
                };

                IEPG.getData(URL_addSavedProgram, VOD_addSavedProgram);
            }
            

			function doCancel(cStatus) {
				var parameter = LocString.substr(LocString.indexOf("?") + 1);
				if(cStatus >= 0) {
                    parameter = parameter.replaceQueryStr(cStatus, "currentStatus");
                }
				location.href = "vodplay.htm?svstype=play&" + parameter;
				//LocString.replace("vod_exit.htm","vodplay.htm");
			}

			function setContent(str) {
				$("checkoutContent").style.visibility = "visible";
				$("checkoutContent").innerHTML = str;
			}

			function insertCA() {//when insert card
				var cardId = getSmartCardId();
				if(cardId == "")
					return;
				var oldCardId = getGlobalVar("currentSmartCardId");
				if(cardId != oldCardId) {// return to portal page
					isReturnMain = true;
					clearInterval(countTimer);
					setContent("插入卡不相同，确定返回主页。");
				} else {
					media.AV.play();
					//mp.play();
					//mp.resume();
					doCancel(0);// return play status
				}
			}

			function pulloutCA() {
				//mp.pause();
				tipType = 10000;
				initDialog(tipType);
			}

			function enterCanel() {
				if(tipType == 1313) {
                    setGlobalVar("vod_ctrl_startime", 0);
                    doCancel(-1);
					// location = "vodplay.htm";
				}else if(tipType == 10000) {
					doConfirm(2);
				} else if(tipType == 100000) {
					doConfirm(3);
				}//return parent page when in no cardId status
				else{
					doCancel(-1);
				}
			}
			
            document.onkeypress = grabEvent;
            document.onsystemevent = grabEvent;
            document.onirkeypress = grabEvent;
			
			function grabEvent(e) {
				var val = e.which || e.keyCode;
				switch(val) {
					case KEY_FORWARD:
					case KEY_FAST_FORWARD_N:
                    case KEY_FAST_FORWARD_RG:
						if(listFocusId == "Image1") {
							listFocusId = "Image2";
							var obj = $("Image2");
							obj.src = obj.src.replace(".png", "_s.png");
							obj = $("Image1");
							obj.src = obj.src.replace("_s.png", ".png");
						}
						break;
					case KEY_REWIND:
					case KEY_FAST_REWIND_N:
                    case KEY_FAST_REWIND_RG:
						if(listFocusId == "Image2") {
							listFocusId = "Image1";
							var obj = $("Image1");
							obj.src = obj.src.replace(".png", "_s.png");
							obj = $("Image2");
							obj.src = obj.src.replace("_s.png", ".png");
						}
						break;
					case KEY_ENTER:
						if(listFocusId == "Image1") {//确定按钮
								if(tipType != 10000){
									doConfirm(tipType);
								} else if(isReturnMain) {
									doConfirm(1);
								}
							} else {
								enterCanel();//取消按钮
							}
						break;
					case KEY_STOP:
						e.preventDefault();
						break;
					case KEY_QUIT:
					case KEY_RETURN:
					case 640:
					case 114:
						e.preventDefault();
						enterCanel();
						break;
					case KEY_HOMEPAGE://主页键时仍然弹出对话框091106
						e.preventDefault();
						//isStop = true;
						tipType = 1;
						initDialog(tipType);
						break;
					case 5301:
					pulloutCA();//CA 卡拔出消息
					break;
					case 5300:
					insertCA();//CA 卡插入消息
					break;
					default:
						break;
				}
			};
			//end grabDown
//			document.onkeypress = function(e) {
//				var code = e.keyCode || e.which;
//				switch(code) {
//					case DVB.EVT_TYPE_CA_ALARM://CA的警告消息
//						var evt = DVB.getEvent(DVB.EVT_TYPE_CA_ALARM);
//						if(evt.msgSubType == 0)
//							insertCA();//CA 卡插入消息
//						else if(evt.msgSubType == 1)
//							pulloutCA();//CA 卡拔出消息
//						break;
//					default:
//						break;
//				}
//			};
			function ajax(url, handler) {//ajax请求
				var xmlHttp;
				if(window.XMLHttpRequest)
					xmlHttp = new XMLHttpRequest();
				else if(window.ActiveXObject)
					xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
				xmlHttp.onreadystatechange = function() {
					if(xmlHttp.readyState == 4) {// 已收到响应
						if(xmlHttp.status == 200 || xmlHttp.status == 0) {// 请求成功
							handler(xmlHttp.responseText);
						} else {
							showInfo("");
						}
					}
				};
				xmlHttp.open("GET", url, true);
				xmlHttp.send(null);
			}
		</script>
	</head>
	<body onload="initPage();" onunload="closeVideo();" bgColor="transparent">
		<div id="exit">
			<div id="exit_confirm"><img src="images/y_button_s.png" name="Image1" width="101" height="43" border="0" id="Image1" />
			</div>
			<div id="exit_cancel"><img src="images/c_button.png" name="Image2" width="102" height="44" border="0" id="Image2" />
			</div>
		</div>
		<div id="checkoutContent" style=" text-align:center;">
			<p></p>
		</div>
		<!--end_退出-->
		<!--<div id="pop" style="position: absolute;left: 100px;top:100px;width: 600px;height: 300px;background: white;color: red;word-wrap:break-word;word-break:break-all;display: none;"></div>-->
	</body>
</html>